syntax = "proto3";

package taskapebackend;
import "google/protobuf/timestamp.proto";

option go_package = "./taskape-proto/";

service BackendRequests {
    rpc loginNewUser(NewUserLoginRequest) returns (NewUserLoginResponse) {}
    rpc validateToken(ValidateTokenRequest) returns (ValidateTokenResponse) {}
    rpc refreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {}
    rpc verifyUserToken(VerifyUserRequest) returns (VerifyUserResponse) {}
    rpc registerNewProfile(RegisterNewProfileRequest) returns (RegisterNewProfileResponse) {}
    rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse) {}
    rpc CreateTasksBatch(CreateTasksBatchRequest) returns (CreateTasksBatchResponse) {}
    rpc GetUserTasks(GetUserTasksRequest) returns (GetUserTasksResponse) {}
    rpc CheckHandleAvailability(CheckHandleRequest) returns (CheckHandleResponse) {}
    rpc GetUser(GetUserRequest) returns (GetUserResponse) {}
    rpc UpdateTask(UpdateTaskRequest) returns (UpdateTaskResponse) {}
}

message ValidateTokenRequest {
    string token = 1;
}

message CheckHandleRequest {
    string handle = 1;
}

message CheckHandleResponse {
    bool available = 1;
}

message ValidateTokenResponse {
    bool valid = 1;
}

message RefreshTokenRequest {
    string token = 1;
    string refresh_token = 2;
    string phone = 3;
}

message RefreshTokenResponse {
    string token = 1;
    string refresh_token = 2;
}

message NewUserLoginRequest {
    string phone = 1;
}

message NewUserLoginResponse {
    string token = 1;
    string refresh_token = 2;
    bool profile_exists = 3;
     int64 user_id = 4;
}

message VerifyUserRequest {
    string token =1;
    string phone = 2;
}

message VerifyUserResponse {
    bool success =1;
}

message RegisterNewProfileRequest {
    string handle=1;
    string bio=2;
    string color=3;
    string profile_picture=4;
    string phone=5;
}

message RegisterNewProfileResponse {
    bool success=1;
    int64 id=2;
}

message Task {
  string id = 1;
  string user_id = 2;
  string name = 3;
  string description = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp deadline = 6;
  string author = 7;
  string group = 8;
  string group_id = 9;
  repeated string assigned_to = 10;
  string task_difficulty = 11;
  int32 custom_hours = 12;
  bool mentioned_in_event = 13;
  CompletionStatus completion = 14;
  PrivacySettings privacy = 15;
}

message UpdateTaskRequest {
  Task task = 1;
}

message UpdateTaskResponse {
  bool success = 1;
  string error = 2;
}

message CompletionStatus {
  bool is_completed = 1;
  string proof_url = 2;
}

message PrivacySettings {
  string level = 1;
  repeated string except_ids = 2;
}

message CreateTaskRequest {
  Task task = 1;
}

message CreateTaskResponse {
  bool success = 1;
  string task_id = 2;
  string error = 3;
}

message CreateTasksBatchRequest {
  repeated Task tasks = 1;
}

message CreateTasksBatchResponse {
  bool success = 1;
  repeated string task_ids = 2;
  string error = 3;
}

message GetUserTasksRequest {
  string user_id = 1;
}

message GetUserTasksResponse {
  bool success = 1;
  repeated Task tasks = 2;
  string error = 3;
}

message GetUserRequest {
  string user_id = 1;
}

message GetUserResponse {
  bool success = 1;
  string id = 2;
  string handle = 3;
  string bio = 4;
  string profile_picture = 5;
  string color = 6;
  string error = 7;
}
