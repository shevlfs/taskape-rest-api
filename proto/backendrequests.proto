syntax = "proto3";

package taskapebackend;
import "google/protobuf/timestamp.proto";

option go_package = "./taskape-proto/";

service BackendRequests {
  rpc loginNewUser(NewUserLoginRequest) returns (NewUserLoginResponse) {}
  rpc validateToken(ValidateTokenRequest) returns (ValidateTokenResponse) {}
  rpc refreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {}
  rpc verifyUserToken(VerifyUserRequest) returns (VerifyUserResponse) {}
  rpc registerNewProfile(RegisterNewProfileRequest)
      returns (RegisterNewProfileResponse) {}
  rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse) {}
  rpc CreateTasksBatch(CreateTasksBatchRequest)
      returns (CreateTasksBatchResponse) {}
  rpc GetUserTasks(GetUserTasksRequest) returns (GetUserTasksResponse) {}
  rpc CheckHandleAvailability(CheckHandleRequest)
      returns (CheckHandleResponse) {}
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {}
  rpc UpdateTask(UpdateTaskRequest) returns (UpdateTaskResponse) {}
  rpc UpdateTaskOrder(UpdateTaskOrderRequest)
      returns (UpdateTaskOrderResponse) {}
  rpc SearchUsers(SearchUsersRequest) returns (SearchUsersResponse) {}
  rpc SendFriendRequest(SendFriendRequestRequest)
      returns (SendFriendRequestResponse) {}
  rpc RespondToFriendRequest(RespondToFriendRequestRequest)
      returns (RespondToFriendRequestResponse) {}
  rpc GetUserFriends(GetUserFriendsRequest) returns (GetUserFriendsResponse) {}
  rpc GetFriendRequests(GetFriendRequestsRequest)
      returns (GetFriendRequestsResponse) {}

  rpc GetUserEvents(GetUserEventsRequest) returns (GetUserEventsResponse) {}
  rpc ConfirmTaskCompletion(ConfirmTaskCompletionRequest)
      returns (ConfirmTaskCompletionResponse) {}

  rpc LikeEvent(LikeEventRequest) returns (LikeEventResponse) {}
  rpc UnlikeEvent(UnlikeEventRequest) returns (UnlikeEventResponse) {}
  rpc AddEventComment(AddEventCommentRequest)
      returns (AddEventCommentResponse) {}
  rpc GetEventComments(GetEventCommentsRequest)
      returns (GetEventCommentsResponse) {}
  rpc DeleteEventComment(DeleteEventCommentRequest)
      returns (DeleteEventCommentResponse) {}

  rpc GetUsersBatch(GetUsersBatchRequest) returns (GetUsersBatchResponse) {}
  rpc GetUsersTasksBatch(GetUsersTasksBatchRequest)
      returns (GetUsersTasksBatchResponse) {}
  rpc EditUserProfile(EditUserProfileRequest)
      returns (EditUserProfileResponse) {}
  rpc CreateGroup(CreateGroupRequest) returns (CreateGroupResponse) {}
  rpc GetGroupTasks(GetGroupTasksRequest) returns (GetGroupTasksResponse) {}
  rpc InviteToGroup(InviteToGroupRequest) returns (InviteToGroupResponse) {}
  rpc AcceptGroupInvite(AcceptGroupInviteRequest)
      returns (AcceptGroupInviteResponse) {}
  rpc KickUserFromGroup(KickUserFromGroupRequest)
      returns (KickUserFromGroupResponse) {}

  rpc GetUserRelatedEvents(GetUserRelatedEventsRequest)
      returns (GetUserRelatedEventsResponse) {}
}

message GetUsersBatchRequest { repeated string user_ids = 1; }

message GetUsersBatchResponse {
  bool success = 1;
  repeated UserResponse users = 2;
  string error = 3;
}

message UserResponse {
  string id = 1;
  string handle = 2;
  string bio = 3;
  string profile_picture = 4;
  string color = 5;
}

message GetUsersTasksBatchRequest {
  repeated string user_ids = 1;
  string requester_id = 2;
}

message GetUsersTasksBatchResponse {
  bool success = 1;
  map<string, UserTasksData> user_tasks = 2;
  string error = 3;
}

message UserTasksData { repeated Task tasks = 1; }

message EditUserProfileRequest {
  string user_id = 1;
  string handle = 2;
  string bio = 3;
  string color = 4;
  string profile_picture = 5;
}

message EditUserProfileResponse {
  bool success = 1;
  string error = 2;
}

message CreateGroupRequest {
  string creator_id = 1;
  string group_name = 2;
  string description = 3;
  string color = 4;
}

message CreateGroupResponse {
  bool success = 1;
  string group_id = 2;
  string error = 3;
}

message GetGroupTasksRequest {
  string group_id = 1;
  string requester_id = 2;
}

message GetGroupTasksResponse {
  bool success = 1;
  repeated Task tasks = 2;
  string error = 3;
}

message InviteToGroupRequest {
  string group_id = 1;
  string inviter_id = 2;
  string invitee_id = 3;
}

message InviteToGroupResponse {
  bool success = 1;
  string invite_id = 2;
  string error = 3;
}

message AcceptGroupInviteRequest {
  string invite_id = 1;
  string user_id = 2;
  bool accept = 3;
}

message AcceptGroupInviteResponse {
  bool success = 1;
  string error = 2;
}

message KickUserFromGroupRequest {
  string group_id = 1;
  string admin_id = 2;
  string user_id = 3;
}

message KickUserFromGroupResponse {
  bool success = 1;
  string error = 2;
}

message ValidateTokenRequest { string token = 1; }

message CheckHandleRequest { string handle = 1; }

message CheckHandleResponse { bool available = 1; }

message ValidateTokenResponse { bool valid = 1; }

message RefreshTokenRequest {
  string token = 1;
  string refresh_token = 2;
  string phone = 3;
}

message RefreshTokenResponse {
  string token = 1;
  string refresh_token = 2;
}

message NewUserLoginRequest { string phone = 1; }

message NewUserLoginResponse {
  string token = 1;
  string refresh_token = 2;
  bool profile_exists = 3;
  int64 user_id = 4;
}

message VerifyUserRequest {
  string token = 1;
  string phone = 2;
}

message VerifyUserResponse { bool success = 1; }

message RegisterNewProfileRequest {
  string handle = 1;
  string bio = 2;
  string color = 3;
  string profile_picture = 4;
  string phone = 5;
}

message RegisterNewProfileResponse {
  bool success = 1;
  int64 id = 2;
}

message UpdateTaskOrderRequest {
  string user_id = 1;
  repeated TaskOrderItem tasks = 2;
}

message TaskOrderItem {
  string task_id = 1;
  int32 display_order = 2;
}

message UpdateTaskOrderResponse {
  bool success = 1;
  string error = 2;
}

message Task {
  string id = 1;
  string user_id = 2;
  string name = 3;
  string description = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp deadline = 6;
  string author = 7;
  string group = 8;
  string group_id = 9;
  repeated string assigned_to = 10;
  string task_difficulty = 11;
  int32 custom_hours = 12;
  bool mentioned_in_event = 13;
  CompletionStatus completion = 14;
  PrivacySettings privacy = 15;
  bool flag_status = 16;
  string flag_color = 17;
  string flag_name = 18;
  int32 display_order = 19;
  bool proof_needed = 20;
  string proof_description = 21;
}

message UpdateTaskRequest { Task task = 1; }

message UpdateTaskResponse {
  bool success = 1;
  string error = 2;
}

message PrivacySettings {
  string level = 1;
  repeated string except_ids = 2;
}

message CreateTaskRequest { Task task = 1; }

message CreateTaskResponse {
  bool success = 1;
  string task_id = 2;
  string error = 3;
}

message CreateTasksBatchRequest { repeated Task tasks = 1; }

message CreateTasksBatchResponse {
  bool success = 1;
  repeated string task_ids = 2;
  string error = 3;
}

message GetUserTasksRequest {
  string user_id = 1;
  string requester_id = 2;
}

message GetUserTasksResponse {
  bool success = 1;
  repeated Task tasks = 2;
  string error = 3;
}

message GetUserRequest { string user_id = 1; }

message Friend {
  string id = 1;
  string handle = 2;
  string profile_picture = 3;
  string color = 4;
}

message FriendRequest {
  string id = 1;
  string sender_id = 2;
  string sender_handle = 3;
  string receiver_id = 4;
  string status = 5;
  google.protobuf.Timestamp created_at = 6;
}

message SearchUsersRequest {
  string query = 1;
  int32 limit = 2;
}

message SearchUsersResponse { repeated UserSearchResult users = 1; }

message UserSearchResult {
  string id = 1;
  string handle = 2;
  string profile_picture = 3;
  string color = 4;
}

message GetUserRelatedEventsRequest {
  string target_user_id = 1;
  string requester_id = 2;
  int32 limit = 3;
  bool include_expired = 4;
}

message GetUserRelatedEventsResponse {
  bool success = 1;
  repeated Event events = 2;
  string error = 3;
}

// Add new message types
message GetUserEventRequest {
  string event_id = 1;
  string user_id = 2; // The user requesting access
}

message GetUserEventResponse {
  bool success = 1;
  Event event = 2;
  string error = 3;
}

message CompletionStatus {
  bool is_completed = 1;
  string proof_url = 2;
  bool needs_confirmation = 3;
  bool is_confirmed = 4;
  bool is_rejected = 5;
  string confirmation_user_id = 6;
  google.protobuf.Timestamp confirmed_at = 7;
}

message SendFriendRequestRequest {
  string sender_id = 1;
  string receiver_id = 2;
}

message SendFriendRequestResponse {
  bool success = 1;
  string request_id = 2;
  string error = 3;
}

message RespondToFriendRequestRequest {
  string request_id = 1;
  string user_id = 2;
  string response = 3;
}

message RespondToFriendRequestResponse {
  bool success = 1;
  string error = 2;
}

message GetUserFriendsRequest { string user_id = 1; }

message GetUserFriendsResponse { repeated Friend friends = 1; }

message GetFriendRequestsRequest {
  string user_id = 1;
  string type = 2;
}

message GetFriendRequestsResponse { repeated FriendRequest requests = 1; }

message GetUserResponse {
  bool success = 1;
  string id = 2;
  string handle = 3;
  string bio = 4;
  string profile_picture = 5;
  string color = 6;
  repeated Friend friends = 7;
  repeated FriendRequest incoming_requests = 8;
  repeated FriendRequest outgoing_requests = 9;
  string error = 10;
}

enum EventType {
  NEW_TASKS_ADDED = 0;
  NEWLY_RECEIVED = 1;
  NEWLY_COMPLETED = 2;
  REQUIRES_CONFIRMATION = 3;
  N_DAY_STREAK = 4;
  DEADLINE_COMING_UP = 5;
}

enum EventSize {
  SMALL = 0;
  MEDIUM = 1;
  LARGE = 2;
}

message Event {
  string id = 1;
  string user_id = 2;
  string target_user_id = 3;
  EventType type = 4;
  EventSize size = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp expires_at = 7;
  repeated string task_ids = 8;
  int32 streak_days = 9;
  int32 likes_count = 10;
  repeated string liked_by_user_ids = 11;
  int32 comments_count = 12;
}

message EventComment {
  string id = 1;
  string event_id = 2;
  string user_id = 3;
  string content = 4;
  google.protobuf.Timestamp created_at = 5;
  bool is_edited = 6;
  google.protobuf.Timestamp edited_at = 7;
}

message GetUserEventsRequest {
  string user_id = 1;
  int32 limit = 2;
  bool include_expired = 3;
}

message GetUserEventsResponse {
  bool success = 1;
  repeated Event events = 2;
  string error = 3;
}

message ConfirmTaskCompletionRequest {
  string task_id = 1;
  string confirmer_id = 2;
  bool is_confirmed = 3;
}

message ConfirmTaskCompletionResponse {
  bool success = 1;
  string error = 2;
}

message LikeEventRequest {
  string event_id = 1;
  string user_id = 2;
}

message LikeEventResponse {
  bool success = 1;
  int32 likes_count = 2;
  string error = 3;
}

message UnlikeEventRequest {
  string event_id = 1;
  string user_id = 2;
}

message UnlikeEventResponse {
  bool success = 1;
  int32 likes_count = 2;
  string error = 3;
}

message AddEventCommentRequest {
  string event_id = 1;
  string user_id = 2;
  string content = 3;
}

message AddEventCommentResponse {
  bool success = 1;
  EventComment comment = 2;
  string error = 3;
}

message GetEventCommentsRequest {
  string event_id = 1;
  int32 limit = 2;
  int32 offset = 3;
}

message GetEventCommentsResponse {
  bool success = 1;
  repeated EventComment comments = 2;
  int32 total_count = 3;
  string error = 4;
}

message DeleteEventCommentRequest {
  string comment_id = 1;
  string user_id = 2;
}

message DeleteEventCommentResponse {
  bool success = 1;
  string error = 2;
}
